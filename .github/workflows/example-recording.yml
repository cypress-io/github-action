name: example-recording
#
# If this workflow is failing and you do not want to use it
# then you can disable it individually.
# See GitHub help: Disabling and enabling a workflow
# https://docs.github.com/en/actions/managing-workflow-runs/disabling-and-enabling-a-workflow).
#
# To set it up to work with your own Cypress Cloud refer to the README
# in the corresponding example directory examples/*/recording.
#
on:
  push:
    branches:
      - 'master'
  pull_request:

env:
  # Set up the Cypress Cloud project ID and record key as environment variables
  # If the Actions variable EXAMPLE_PROJECT_ID is not defined then
  # the projectId is taken from cypress.json (v9) or cypress.config.js (v10 and later).
  CYPRESS_PROJECT_ID: ${{ vars.EXAMPLE_PROJECT_ID }}
  CYPRESS_RECORD_KEY: ${{ secrets.EXAMPLE_RECORDING_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:

  # ~~~~~~~~~~~~~~~~~~ Cypress v9 and below (using Legacy configuration) ~~~~~~~~~~~~~~~~~~~ #

  parallel-v9:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress tests
        # normally you would write
        # uses: cypress-io/github-action@v5
        uses: ./
        # let's give this action an ID so we can refer
        # to its output values later
        id: cypress
        # Continue the build in case of an error, as we need to set the
        # commit status in the next step, both in case of success and failure
        continue-on-error: true
        with:
          working-directory: examples/v9/recording
          record: true
          parallel: true
          group: Recording example v9
          tag: action

      # see "outcome" and "conclusion" of a step doc
      # https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#steps-context
      # "output" can be success, failure, cancelled, or skipped
      - name: Print Dashboard URL
        run: |
          echo Cypress finished with: ${{ steps.cypress.outcome }}
          echo See results at ${{ steps.cypress.outputs.dashboardUrl }}

  group-v9:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress tests
        # normally you would write
        # uses: cypress-io/github-action@v5
        uses: ./
        with:
          working-directory: examples/v9/recording
          record: true
          # no parallel flag, just the group name
          group: Recording group v9

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Cypress v10 and higher ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #

  parallel:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress tests
        # normally you would write
        # uses: cypress-io/github-action@v5
        uses: ./
        # let's give this action an ID so we can refer
        # to its output values later
        id: cypress
        # Continue the build in case of an error, as we need to set the
        # commit status in the next step, both in case of success and failure
        continue-on-error: true
        with:
          working-directory: examples/recording
          record: true
          parallel: true
          group: Recording example
          tag: action

      # see "outcome" and "conclusion" of a step doc
      # https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#steps-context
      # "output" can be success, failure, cancelled, or skipped
      - name: Print Dashboard URL
        run: |
          echo Cypress finished with: ${{ steps.cypress.outcome }}
          echo See results at ${{ steps.cypress.outputs.dashboardUrl }}

  group:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cypress tests
        # normally you would write
        # uses: cypress-io/github-action@v5
        uses: ./
        with:
          working-directory: examples/recording
          record: true
          # no parallel flag, just the group name
          group: Recording group
